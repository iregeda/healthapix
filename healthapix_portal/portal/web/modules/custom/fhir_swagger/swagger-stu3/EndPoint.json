{
  "openapi": "3.0.1",
  "info": {
    "title": "FHIR EndPoint resource API documentation",
    "description": "Fast Healthcare Interoperability Resources (FHIR, pronounced \"Fire\") defines a set of \"Resources\" that represent granular clinical concepts. The resources can be managed in isolation, or aggregated into complex documents. Technically, FHIR is designed for the web; the resources are based on simple XML or JSON structures, with an http-based RESTful protocol where each resource has predictable URL. Where possible, open internet standards are used for data representation. \n",
    "version": "1.4.0"
  },
  "servers": [
    {
      "url": "https://healthapix-demo-test.apigee.net/{basePath}",
      "variables": {
        "basePath": {
          "enum": [
            "v1/dstu3",
            "v1/ghc"
          ],
          "default": "v1/ghc"
        }
      }
    }
  ],
  "paths": {
    "/metadata": {
      "get": {
        "description": "Retrieves the server's conformance statement that defines how it supports resources and operations.",
        "operationId": "Conformance Statement",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Specify access token for API in the given format: Bearer [access_token].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "default": "application/json+fhir;charset=UTF-8"
            }
          },
          {
            "name": "_format",
            "in": "query",
            "description": "Format of data to be returned.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Conformance resource",
            "content": {}
          },
          "default": {
            "description": "unexpected error",
            "content": {}
          }
        },
        "security": [
          {
            "OAuthV2B2C": [
              "patient/EndPoint.read"
            ]
          },
          {
            "OAuthV2B2B": [
              "patient/EndPoint.read"
            ]
          }
        ]
      }
    },
    "/_history": {
      "get": {
        "description": "It retrieves the history of all resources supported by the system.",
        "operationId": "Resources History",
        "parameters": [
          {
            "name": "_format",
            "in": "query",
            "description": "Format of data to be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_count",
            "in": "query",
            "description": "The number of resources needed in a page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_since",
            "in": "query",
            "description": "Specify an instant to only include resource versions that were created at or after the given instant in time. An instant in time is known at least to the second and always includes a time zone.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Specify access token for API in the given format: Bearer [access_token].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "default": "application/json+fhir;charset=UTF-8"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A Bundle with type set to history containing the specified version history, sorted with oldest versions last, and including deleted resources.",
            "content": {}
          },
          "default": {
            "description": "unexpected error",
            "content": {}
          }
        },
        "security": [
          {
            "OAuthV2B2C": [
              "patient/EndPoint.read"
            ]
          },
          {
            "OAuthV2B2B": [
              "patient/EndPoint.read"
            ]
          }
        ]
      }
    },
    "/$meta": {
      "get": {
        "description": "Retrieves a summary of the profiles, tags, and security labels used by the system.",
        "operationId": "Resources Metadata",
        "parameters": [
          {
            "name": "_format",
            "in": "query",
            "description": "Format of data to be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Specify access token for API in the given format: Bearer [access_token].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "default": "application/json+fhir;charset=UTF-8"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieves a summary of the profiles, tags, and security labels used by the system.",
            "content": {}
          },
          "default": {
            "description": "unexpected error",
            "content": {}
          }
        },
        "security": [
          {
            "OAuthV2B2C": [
              "patient/EndPoint.read"
            ]
          },
          {
            "OAuthV2B2B": [
              "patient/EndPoint.read"
            ]
          }
        ]
      }
    },
    "/Composition": {
      "get": {
        "description": "It generates a fully bundled document from composition.",
        "operationId": "Compositions Document",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Specify access token for API in the given format: Bearer [access_token].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "default": "application/json+fhir;charset=UTF-8"
            }
          },
          {
            "name": "_format",
            "in": "query",
            "description": "Format of data to be returned.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": " A fully bundled document from a composition.",
            "content": {}
          },
          "default": {
            "description": "unexpected error",
            "content": {}
          }
        },
        "security": [
          {
            "OAuthV2B2C": [
              "patient/EndPoint.read"
            ]
          },
          {
            "OAuthV2B2B": [
              "patient/EndPoint.read"
            ]
          }
        ]
      }
    },
    "/Composition/{id}": {
      "get": {
        "description": "It generates a document from a specific composition.",
        "operationId": "Composition Document",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Specify access token for API in the given format: Bearer [access_token].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The logical resource id associated with the Composition.",
            "required": true,
            "schema": {
              "pattern": "[a-z0-9\\-\\.]{1,64}",
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "default": "application/json+fhir;charset=UTF-8"
            }
          },
          {
            "name": "_format",
            "in": "query",
            "description": "Format of data to be returned.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": " A document from a composition.",
            "content": {}
          },
          "default": {
            "description": "unexpected error",
            "content": {}
          }
        },
        "security": [
          {
            "OAuthV2B2C": [
              "patient/EndPoint.read"
            ]
          },
          {
            "OAuthV2B2B": [
              "patient/EndPoint.read"
            ]
          }
        ]
      }
    },
    "/Binary": {
      "get": {
        "description": "Returns all Binary resources.",
        "operationId": "Binary Objects Read",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Specify access token for API in the given format: Bearer [access_token].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "default": "application/json+fhir;charset=UTF-8"
            }
          },
          {
            "name": "_format",
            "in": "query",
            "description": "Format of data to be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contenttype",
            "in": "query",
            "description": "MimeType of the binary content. Value can have following formats: [code] or [namespace]|[code] or |[code].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_id",
            "in": "query",
            "description": "The logical resource id associated with the Binary Data.",
            "schema": {
              "pattern": "[a-z0-9\\-\\.]{1,64}",
              "type": "string"
            }
          },
          {
            "name": "_elements",
            "in": "query",
            "description": "Used to specify set of elements be returned as part of a resource. The _elements parameter consists of a comma separated list of base element names.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_lastUpdated",
            "in": "query",
            "description": "The search parameter _lastUpdated can be used to select binary data based on the last time they were changed. The parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <=, < and != may be used on the parameter value.",
            "schema": {
              "pattern": "([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?",
              "type": "string"
            }
          },
          {
            "name": "_profile",
            "in": "query",
            "description": "This parameter searches on the profile element in the meta element of the binary data. Value can have following formats: [code] or [namespace]|[code] or |[code].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_tag",
            "in": "query",
            "description": "This parameter searches on the tags element in the meta element of the binary data. Value can have following formats: [code] or [namespace]|[code] or |[code].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_security",
            "in": "query",
            "description": "This parameter searches on the security element in the meta element of the binary data. Value can have following formats: [code] or [namespace]|[code] or |[code].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_count",
            "in": "query",
            "description": "The number of binary data resources that should be returned in a single page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_summary",
            "in": "query",
            "description": "Used to request the server to return a subset of the resource. It can contain one of the following values: true, false, text, data or count.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_content",
            "in": "query",
            "description": "Used to search the entire content of the Binary resource.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_text",
            "in": "query",
            "description": "Used to search on the narrative of the Binary resource.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_include",
            "in": "query",
            "description": "This parameter can be used to fetch a particular binary data, and any resources that it references. Parameter values for _include have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes i.e. binary data  2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_revinclude",
            "in": "query",
            "description": "This parameter can be used to fetch a particular binary data, and any resources that refer to it. It can have a value of one of the possible search parameters. Parameter values for _revinclude have 3 parts, separated by a : separator. 1. The name of the source resource from which the join comes i.e. binary data 2. The name of the search parameter which must be of type reference. 3.(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_sort",
            "in": "query",
            "description": "_sort is used to order the results in default(ascending) order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_sort:asc",
            "in": "query",
            "description": "Used to order the results in ascending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_sort:desc",
            "in": "query",
            "description": "_sort is used to order the results in descending order. The value can be one of the possible search parameters. The _sort parameter can repeat to indicate sort order, with the repeats indicating a lower sort priority sequentially.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns binary data such as such as images and other media, documents (CDA, PDF, Word etc.), plain text, XML.",
            "content": {}
          },
          "default": {
            "description": "unexpected error",
            "content": {}
          }
        },
        "security": [
          {
            "OAuthV2B2C": [
              "patient/EndPoint.read"
            ]
          },
          {
            "OAuthV2B2B": [
              "patient/EndPoint.read"
            ]
          }
        ]
      }
    },
    "/Binary/{id}": {
      "get": {
        "description": "Returns Binary resource having id given in path.",
        "operationId": "Binary Object Read",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Specify access token for API in the given format: Bearer [access_token].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The logical resource id associated with the Binary Data.",
            "required": true,
            "schema": {
              "pattern": "[a-z0-9\\-\\.]{1,64}",
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "default": "application/json+fhir;charset=UTF-8"
            }
          },
          {
            "name": "_format",
            "in": "query",
            "description": "Format of data to be returned.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns binary data such as such as images and other media, documents (CDA, PDF, Word etc.), plain text, XML.",
            "content": {}
          },
          "default": {
            "description": "unexpected error",
            "content": {}
          }
        },
        "security": [
          {
            "OAuthV2B2C": [
              "patient/EndPoint.read"
            ]
          },
          {
            "OAuthV2B2B": [
              "patient/EndPoint.read"
            ]
          }
        ]
      }
    },
    "/Binary/{id}/_history/{vid}": {
      "get": {
        "description": "Returns the given version of the document as a sequence of bytes.",
        "operationId": "Binary Object Version Read",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Specify access token for API in the given format: Bearer [access_token].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The logical resource id associated with the Binary Data.",
            "required": true,
            "schema": {
              "pattern": "[a-z0-9\\-\\.]{1,64}",
              "type": "string"
            }
          },
          {
            "name": "vid",
            "in": "path",
            "description": "The version id associated with the binary data.",
            "required": true,
            "schema": {
              "pattern": "[a-z0-9\\-\\.]{1,64}",
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "default": "application/json+fhir;charset=UTF-8"
            }
          },
          {
            "name": "_format",
            "in": "query",
            "description": "Format of data to be returned.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns binary data such as such as images and other media, documents (CDA, PDF, Word etc.), plain text, XML.",
            "content": {}
          },
          "default": {
            "description": "unexpected error",
            "content": {}
          }
        },
        "security": [
          {
            "OAuthV2B2C": [
              "patient/EndPoint.read"
            ]
          },
          {
            "OAuthV2B2B": [
              "patient/EndPoint.read"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "OAuthV2B2C": {
        "type": "oauth2",
        "description": "Security scheme for B2C flow using authorization code flow.",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://healthapix-demo-test.apigee.net/oauth/v2/authorize",
            "tokenUrl": "https://healthapix-demo-test.apigee.net/oauth/v2/accesstoken",
            "scopes": {
              "patient/EndPoint.read": "Read permissions for EndPoint demographics.",
              "patient/EndPoint.write": "Write permissions for EndPoint demographics."
            }
          }
        }
      },
      "OAuthV2B2B": {
        "type": "oauth2",
        "description": "Security scheme for B2B flow using authorization code flow.",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://healthapix-demo-test.apigee.net/oauth/v2/accesstoken?grant_type=client_credentials",
            "scopes": {
              "patient/EndPoint.read": "Read permissions for EndPoint demographics.",
              "patient/EndPoint.write": "Write permissions for EndPoint demographics."
            }
          }
        }
      }
    }
  }
}
