{
  "openapi": "3.0.1",
  "info": {
    "title": "FHIR Observation resource API documentation",
    "description": "Fast Healthcare Interoperability Resources (FHIR, pronounced \"Fire\") defines a set of \"Resources\" that represent granular clinical concepts. The resources can be managed in isolation, or aggregated into complex documents. Technically, FHIR is designed for the web; the resources are based on simple XML or JSON structures, with an http-based RESTful protocol where each resource has predictable URL. Where possible, open internet standards are used for data representation. \n",
    "version": "1.4.0"
  },
  "servers": [
    {
      "url": "https://healthapix-demo-test.apigee.net/{basePath}",
      "variables": {
        "basePath": {
          "enum": [
            "v1/dstu3",
            "v1/ghc"
          ],
          "default": "v1/ghc"
        }
      }
    }
  ],
  "paths": {
    "/Observation": {
      "get": {
        "tags": [
          "Observation"
        ],
        "description": "Returns Observations based on filter criteria OR Provides provision for pagination (stateid, page, page_size, _pretty & _bundletype are query parameters used for Paging).<p><a href = 'https://www.hl7.org/fhir/observation.html'>FHIR documentation for Observation.</a></p>",
        "operationId": "Observations Search",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Specify access token for API in the given format: Bearer [access_token].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "default": "application/json+fhir;charset=UTF-8"
            }
          },
          {
            "name": "_format",
            "in": "query",
            "description": "Format of data to be returned.",
            "schema": {
              "type": "string",
              "x-consoleDefault": "application/json"
            },
            "x-consoleDefault": "application/json"
          },
          {
            "name": "_content",
            "in": "query",
            "description": "Search the contents of the resource's data using a fulltext search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_id",
            "in": "query",
            "description": "The resource identity",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_language",
            "in": "query",
            "description": "The resource language",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_lastUpdated",
            "in": "query",
            "description": "Only return resources which were last updated as specified by the given range. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "_profile",
            "in": "query",
            "description": "Search for resources which have the given profile",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_security",
            "in": "query",
            "description": "Search for resources which have the given security labels",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_tag",
            "in": "query",
            "description": "Search for resources which have the given tag",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_text",
            "in": "query",
            "description": "Search the contents of the resource's narrative using a fulltext search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "The classification of the type of observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "description": "The code of the observation type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code-value-concept",
            "in": "query",
            "description": "Both code and one of the value parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code-value-date",
            "in": "query",
            "description": "Both code and one of the value parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code-value-quantity",
            "in": "query",
            "description": "Both code and one of the value parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code-value-string",
            "in": "query",
            "description": "Both code and one of the value parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-code",
            "in": "query",
            "description": "The component code of the observation type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-code-component-value-concept",
            "in": "query",
            "description": "Both component code and one of the component value parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-code-component-value-quantity",
            "in": "query",
            "description": "Both component code and one of the component value parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-code-component-value-string",
            "in": "query",
            "description": "Both component code and one of the component value parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-data-absent-reason",
            "in": "query",
            "description": "The reason why the expected value in the element Observation.component.value[x] is missing.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-value-concept",
            "in": "query",
            "description": "The value of the component observation, if the value is a CodeableConcept",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-value-quantity",
            "in": "query",
            "description": "The value of the component observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "component-value-string",
            "in": "query",
            "description": "The value of the component observation, if the value is a string, and also searches in CodeableConcept.text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "data-absent-reason",
            "in": "query",
            "description": "The reason why the expected value in the element Observation.value[x] is missing.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Obtained date/time. If the obtained element is a period, a date that falls in the period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "device",
            "in": "query",
            "description": "The Device that generated the observation data.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "encounter",
            "in": "query",
            "description": "Healthcare event related to the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "description": "The unique id for a particular observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "patient",
            "in": "query",
            "description": "The subject that the observation is about (if patient)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "performer",
            "in": "query",
            "description": "Who performed the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related-target",
            "in": "query",
            "description": "Resource that is related to this one",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related-target-related-type",
            "in": "query",
            "description": "Related Observations - search on related-type and related-target together",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related-type",
            "in": "query",
            "description": "has-member | derived-from | sequel-to | replaces | qualified-by | interfered-by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "specimen",
            "in": "query",
            "description": "Specimen used for this observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subject",
            "in": "query",
            "description": "The subject that the observation is about",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value-concept",
            "in": "query",
            "description": "The value of the observation, if the value is a CodeableConcept",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value-date",
            "in": "query",
            "description": "The value of the observation, if the value is a date or period of time. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "value-quantity",
            "in": "query",
            "description": "The value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "value-string",
            "in": "query",
            "description": "The value of the observation, if the value is a string, and also searches in CodeableConcept.text",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Observation bundle",
            "content": {
              "application/json+fhir;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Observation"
                  }
                }
              },
              "application/xml+fhir;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Observation"
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {}
          }
        },
        "security": [
          {
            "OAuthV2B2C": [
              "patient/Observation.read"
            ]
          },
          {
            "OAuthV2B2B": [
              "patient/Observation.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Observation"
        ],
        "description": "The conditional update interaction is used to update an existing Observation based on some identification criteria, rather than by logical id.<p><a href = 'https://www.hl7.org/fhir/observation.html'>FHIR documentation for Observation.</a></p>",
        "operationId": "Observation Conditional Update",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Specify access token for API in the given format: Bearer [access_token].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "default": "application/json+fhir;charset=UTF-8"
            }
          },
          {
            "name": "_content",
            "in": "query",
            "description": "Search the contents of the resource's data using a fulltext search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_id",
            "in": "query",
            "description": "The resource identity",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_language",
            "in": "query",
            "description": "The resource language",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_lastUpdated",
            "in": "query",
            "description": "Only return resources which were last updated as specified by the given range. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "_profile",
            "in": "query",
            "description": "Search for resources which have the given profile",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_security",
            "in": "query",
            "description": "Search for resources which have the given security labels",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_tag",
            "in": "query",
            "description": "Search for resources which have the given tag",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_text",
            "in": "query",
            "description": "Search the contents of the resource's narrative using a fulltext search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "The classification of the type of observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "description": "The code of the observation type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code-value-concept",
            "in": "query",
            "description": "Both code and one of the value parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code-value-date",
            "in": "query",
            "description": "Both code and one of the value parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code-value-quantity",
            "in": "query",
            "description": "Both code and one of the value parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code-value-string",
            "in": "query",
            "description": "Both code and one of the value parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-code",
            "in": "query",
            "description": "The component code of the observation type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-code-component-value-concept",
            "in": "query",
            "description": "Both component code and one of the component value parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-code-component-value-quantity",
            "in": "query",
            "description": "Both component code and one of the component value parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-code-component-value-string",
            "in": "query",
            "description": "Both component code and one of the component value parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-data-absent-reason",
            "in": "query",
            "description": "The reason why the expected value in the element Observation.component.value[x] is missing.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-value-concept",
            "in": "query",
            "description": "The value of the component observation, if the value is a CodeableConcept",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-value-quantity",
            "in": "query",
            "description": "The value of the component observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "component-value-string",
            "in": "query",
            "description": "The value of the component observation, if the value is a string, and also searches in CodeableConcept.text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "data-absent-reason",
            "in": "query",
            "description": "The reason why the expected value in the element Observation.value[x] is missing.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Obtained date/time. If the obtained element is a period, a date that falls in the period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "device",
            "in": "query",
            "description": "The Device that generated the observation data.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "encounter",
            "in": "query",
            "description": "Healthcare event related to the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "description": "The unique id for a particular observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "patient",
            "in": "query",
            "description": "The subject that the observation is about (if patient)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "performer",
            "in": "query",
            "description": "Who performed the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related-target",
            "in": "query",
            "description": "Resource that is related to this one",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related-target-related-type",
            "in": "query",
            "description": "Related Observations - search on related-type and related-target together",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related-type",
            "in": "query",
            "description": "has-member | derived-from | sequel-to | replaces | qualified-by | interfered-by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "specimen",
            "in": "query",
            "description": "Specimen used for this observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subject",
            "in": "query",
            "description": "The subject that the observation is about",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value-concept",
            "in": "query",
            "description": "The value of the observation, if the value is a CodeableConcept",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value-date",
            "in": "query",
            "description": "The value of the observation, if the value is a date or period of time. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "value-quantity",
            "in": "query",
            "description": "The value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "value-string",
            "in": "query",
            "description": "The value of the observation, if the value is a string, and also searches in CodeableConcept.text",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The request body should be a valid data payload.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Observation"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Observation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Observation Updated.",
            "content": {}
          },
          "201": {
            "description": "Observation Created.",
            "content": {}
          },
          "400": {
            "description": "Observation could not be parsed or failed basic FHIR validation rules (or multiple matches were found).",
            "content": {}
          },
          "403": {
            "description": "Not Authorized.",
            "content": {}
          },
          "412": {
            "description": "The given criteria is not selective enough.",
            "content": {}
          },
          "default": {
            "description": "unexpected error",
            "content": {}
          }
        },
        "security": [
          {
            "OAuthV2B2C": [
              "patient/Observation.write"
            ]
          },
          {
            "OAuthV2B2B": [
              "patient/Observation.write"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Observation"
        ],
        "description": "Create a new Observation with a server assigned id.<p><a href = 'https://www.hl7.org/fhir/observation.html'>FHIR documentation for Observation.</a></p>",
        "operationId": "Create Observation",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Specify access token for API in the given format: Bearer [access_token].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "default": "application/json+fhir;charset=UTF-8"
            }
          },
          {
            "name": "If-None-Exist",
            "in": "header",
            "description": "Specify the search query for conditional create.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The request body should be a valid data payload.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Observation"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Observation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful creation",
            "content": {}
          },
          "400": {
            "description": "Observation could not be parsed or failed basic FHIR validation rules",
            "content": {}
          },
          "404": {
            "description": "Observation not found.",
            "content": {}
          },
          "422": {
            "description": "The Observation resource violated applicable FHIR profiles or server business rules.",
            "content": {}
          },
          "default": {
            "description": "unexpected error",
            "content": {}
          }
        },
        "security": [
          {
            "OAuthV2B2C": [
              "patient/Observation.write"
            ]
          },
          {
            "OAuthV2B2B": [
              "patient/Observation.write"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Observation"
        ],
        "description": "The conditional delete interaction allows a client to delete Observation/Observations  based on some selection criteria, rather than by a specific logical id.<p><a href = 'https://www.hl7.org/fhir/observation.html'>FHIR documentation for Observation.</a></p>",
        "operationId": "Observation Conditional Delete",
        "parameters": [
          {
            "name": "_content",
            "in": "query",
            "description": "Search the contents of the resource's data using a fulltext search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_id",
            "in": "query",
            "description": "The resource identity",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_language",
            "in": "query",
            "description": "The resource language",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_lastUpdated",
            "in": "query",
            "description": "Only return resources which were last updated as specified by the given range. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "_profile",
            "in": "query",
            "description": "Search for resources which have the given profile",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_security",
            "in": "query",
            "description": "Search for resources which have the given security labels",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_tag",
            "in": "query",
            "description": "Search for resources which have the given tag",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_text",
            "in": "query",
            "description": "Search the contents of the resource's narrative using a fulltext search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "The classification of the type of observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "description": "The code of the observation type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code-value-concept",
            "in": "query",
            "description": "Both code and one of the value parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code-value-date",
            "in": "query",
            "description": "Both code and one of the value parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code-value-quantity",
            "in": "query",
            "description": "Both code and one of the value parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code-value-string",
            "in": "query",
            "description": "Both code and one of the value parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-code",
            "in": "query",
            "description": "The component code of the observation type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-code-component-value-concept",
            "in": "query",
            "description": "Both component code and one of the component value parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-code-component-value-quantity",
            "in": "query",
            "description": "Both component code and one of the component value parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-code-component-value-string",
            "in": "query",
            "description": "Both component code and one of the component value parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-data-absent-reason",
            "in": "query",
            "description": "The reason why the expected value in the element Observation.component.value[x] is missing.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-value-concept",
            "in": "query",
            "description": "The value of the component observation, if the value is a CodeableConcept",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-value-quantity",
            "in": "query",
            "description": "The value of the component observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "component-value-string",
            "in": "query",
            "description": "The value of the component observation, if the value is a string, and also searches in CodeableConcept.text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "data-absent-reason",
            "in": "query",
            "description": "The reason why the expected value in the element Observation.value[x] is missing.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Obtained date/time. If the obtained element is a period, a date that falls in the period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "device",
            "in": "query",
            "description": "The Device that generated the observation data.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "encounter",
            "in": "query",
            "description": "Healthcare event related to the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "description": "The unique id for a particular observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "patient",
            "in": "query",
            "description": "The subject that the observation is about (if patient)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "performer",
            "in": "query",
            "description": "Who performed the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related-target",
            "in": "query",
            "description": "Resource that is related to this one",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related-target-related-type",
            "in": "query",
            "description": "Related Observations - search on related-type and related-target together",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related-type",
            "in": "query",
            "description": "has-member | derived-from | sequel-to | replaces | qualified-by | interfered-by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "specimen",
            "in": "query",
            "description": "Specimen used for this observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subject",
            "in": "query",
            "description": "The subject that the observation is about",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value-concept",
            "in": "query",
            "description": "The value of the observation, if the value is a CodeableConcept",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value-date",
            "in": "query",
            "description": "The value of the observation, if the value is a date or period of time. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "value-quantity",
            "in": "query",
            "description": "The value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "value-string",
            "in": "query",
            "description": "The value of the observation, if the value is a string, and also searches in CodeableConcept.text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Specify access token for API in the given format: Bearer [access_token].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "default": "application/json+fhir;charset=UTF-8"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No Content.",
            "content": {}
          },
          "204": {
            "description": "No Content.",
            "content": {}
          },
          "404": {
            "description": "Observation not found.",
            "content": {}
          },
          "405": {
            "description": "Method not allowed.",
            "content": {}
          },
          "409": {
            "description": "Conflict Error.",
            "content": {}
          },
          "412": {
            "description": "The given criteria is not selective enough.",
            "content": {}
          },
          "default": {
            "description": "unexpected error",
            "content": {}
          }
        },
        "security": [
          {
            "OAuthV2B2C": [
              "patient/Observation.write"
            ]
          },
          {
            "OAuthV2B2B": [
              "patient/Observation.write"
            ]
          }
        ]
      }
    },
    "/Observation/{id}": {
      "get": {
        "tags": [
          "Observation"
        ],
        "description": "Returns details of Observation having id given in path.<p><a href = 'https://www.hl7.org/fhir/observation.html'>FHIR documentation for Observation.</a></p>",
        "operationId": "Read Observation",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Specify access token for API in the given format: Bearer [access_token].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "default": "application/json+fhir;charset=UTF-8"
            }
          },
          {
            "name": "_format",
            "in": "query",
            "description": "Format of data to be returned.",
            "schema": {
              "type": "string",
              "x-consoleDefault": "application/json"
            },
            "x-consoleDefault": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The logical resource id associated with the Resource.",
            "required": true,
            "schema": {
              "pattern": "[a-z0-9\\-\\.]{1,64}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Observation Instance",
            "content": {
              "application/json+fhir;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/Observation"
                }
              },
              "application/xml+fhir;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/Observation"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {}
          }
        },
        "security": [
          {
            "OAuthV2B2C": [
              "patient/Observation.read"
            ]
          },
          {
            "OAuthV2B2B": [
              "patient/Observation.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Observation"
        ],
        "description": "Update an existing Observation by its id (or create it if it is new).<p><a href = 'https://www.hl7.org/fhir/observation.html'>FHIR documentation for Observation.</a></p>",
        "operationId": "Update Observation",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Specify access token for API in the given format: Bearer [access_token].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "default": "application/json+fhir;charset=UTF-8"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The logical resource id associated with the Resource.",
            "required": true,
            "schema": {
              "pattern": "[a-z0-9\\-\\.]{1,64}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The request body should be a valid data payload.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Observation"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Observation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Observation Updated.",
            "content": {}
          },
          "201": {
            "description": "Observation Created.",
            "content": {}
          },
          "400": {
            "description": "Observation could not be parsed or failed basic FHIR validation rules (or multiple matches were found).",
            "content": {}
          },
          "403": {
            "description": "Not Authorized.",
            "content": {}
          },
          "412": {
            "description": "The given criteria is not selective enough.",
            "content": {}
          },
          "default": {
            "description": "unexpected error",
            "content": {}
          }
        },
        "security": [
          {
            "OAuthV2B2C": [
              "patient/Observation.write"
            ]
          },
          {
            "OAuthV2B2B": [
              "patient/Observation.write"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Observation"
        ],
        "description": "The delete interaction removes an existing Observation.<p><a href = 'https://www.hl7.org/fhir/observation.html'>FHIR documentation for Observation.</a></p>",
        "operationId": "Delete Observation",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Specify access token for API in the given format: Bearer [access_token].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "default": "application/json+fhir;charset=UTF-8"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The logical resource id associated with the Resource.",
            "required": true,
            "schema": {
              "pattern": "[a-z0-9\\-\\.]{1,64}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No Content.",
            "content": {}
          },
          "204": {
            "description": "No Content.",
            "content": {}
          },
          "404": {
            "description": "Observation not found.",
            "content": {}
          },
          "405": {
            "description": "Method not allowed.",
            "content": {}
          },
          "409": {
            "description": "Conflict Error.",
            "content": {}
          },
          "412": {
            "description": "The given criteria is not selective enough.",
            "content": {}
          },
          "default": {
            "description": "unexpected error",
            "content": {}
          }
        },
        "security": [
          {
            "OAuthV2B2C": [
              "patient/Observation.write"
            ]
          },
          {
            "OAuthV2B2B": [
              "patient/Observation.write"
            ]
          }
        ]
      }
    },
    "/Observation/{id}/_history": {
      "get": {
        "tags": [
          "Observation"
        ],
        "description": "It retrieves the history of a particular Observation identified by the given id in path.<p><a href = 'https://www.hl7.org/fhir/observation.html'>FHIR documentation for Observation.</a></p>",
        "operationId": "Observation History",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Specify access token for API in the given format: Bearer [access_token].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "default": "application/json+fhir;charset=UTF-8"
            }
          },
          {
            "name": "_format",
            "in": "query",
            "description": "Format of data to be returned.",
            "schema": {
              "type": "string",
              "x-consoleDefault": "application/json"
            },
            "x-consoleDefault": "application/json"
          },
          {
            "name": "_count",
            "in": "query",
            "description": "Number of records needed in response.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_since",
            "in": "query",
            "description": "Specify an instant to only include resource versions that were created at or after the given instant in time. An instant in time is known at least to the second and always includes a time zone.",
            "schema": {
              "pattern": "([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The logical resource id associated with the Resource.",
            "required": true,
            "schema": {
              "pattern": "[a-z0-9\\-\\.]{1,64}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Observation bundle",
            "content": {
              "application/json+fhir;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Observation"
                  }
                }
              },
              "application/xml+fhir;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Observation"
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {}
          }
        },
        "security": [
          {
            "OAuthV2B2C": [
              "patient/Observation.read"
            ]
          },
          {
            "OAuthV2B2B": [
              "patient/Observation.read"
            ]
          }
        ]
      }
    },
    "/Observation/_history": {
      "get": {
        "tags": [
          "Observation"
        ],
        "description": "It retrieves the history of all resources of Observation.<p><a href = 'https://www.hl7.org/fhir/observation.html'>FHIR documentation for Observation.</a></p>",
        "operationId": "Observations History",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Specify access token for API in the given format: Bearer [access_token].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "default": "application/json+fhir;charset=UTF-8"
            }
          },
          {
            "name": "_format",
            "in": "query",
            "description": "Format of data to be returned.",
            "schema": {
              "type": "string",
              "x-consoleDefault": "application/json"
            },
            "x-consoleDefault": "application/json"
          },
          {
            "name": "_count",
            "in": "query",
            "description": "Number of records needed in response.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_since",
            "in": "query",
            "description": "Specify an instant to only include resource versions that were created at or after the given instant in time. An instant in time is known at least to the second and always includes a time zone.",
            "schema": {
              "pattern": "([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Observation bundle",
            "content": {
              "application/json+fhir;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Observation"
                  }
                }
              },
              "application/xml+fhir;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Observation"
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {}
          }
        },
        "security": [
          {
            "OAuthV2B2C": [
              "patient/Observation.read"
            ]
          },
          {
            "OAuthV2B2B": [
              "patient/Observation.read"
            ]
          }
        ]
      }
    },
    "/Observation/{id}/_history/{vid}": {
      "get": {
        "tags": [
          "Observation"
        ],
        "description": "This interaction preforms a version specific read of Observation resource.<p><a href = 'https://www.hl7.org/fhir/observation.html'>FHIR documentation for Observation.</a></p>",
        "operationId": "Observation Version Read",
        "parameters": [
          {
            "name": "vid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Specify access token for API in the given format: Bearer [access_token].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "default": "application/json+fhir;charset=UTF-8"
            }
          },
          {
            "name": "_format",
            "in": "query",
            "description": "Format of data to be returned.",
            "schema": {
              "type": "string",
              "x-consoleDefault": "application/json"
            },
            "x-consoleDefault": "application/json"
          },
          {
            "name": "_count",
            "in": "query",
            "description": "Number of records needed in response.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_since",
            "in": "query",
            "description": "Specify an instant to only include resource versions that were created at or after the given instant in time. An instant in time is known at least to the second and always includes a time zone.",
            "schema": {
              "pattern": "([1-9][0-9]{3}|0[0-9]{3})(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?",
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The logical resource id associated with the Resource.",
            "required": true,
            "schema": {
              "pattern": "[a-z0-9\\-\\.]{1,64}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Observation Instance",
            "content": {
              "application/json+fhir;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/Observation"
                }
              },
              "application/xml+fhir;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/Observation"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {}
          }
        },
        "security": [
          {
            "OAuthV2B2C": [
              "patient/Observation.read"
            ]
          },
          {
            "OAuthV2B2B": [
              "patient/Observation.read"
            ]
          }
        ]
      }
    },
    "/Observation/$meta": {
      "get": {
        "tags": [
          "Observation"
        ],
        "description": "Retrieves a summary of the profiles, tags, and security labels for Observations.<p><a href = 'https://www.hl7.org/fhir/observation.html'>FHIR documentation for Observation.</a></p>",
        "operationId": "Observations Metadata",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Specify access token for API in the given format: Bearer [access_token].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "default": "application/json+fhir;charset=UTF-8"
            }
          },
          {
            "name": "_format",
            "in": "query",
            "description": "Format of data to be returned.",
            "schema": {
              "type": "string",
              "x-consoleDefault": "application/json"
            },
            "x-consoleDefault": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all tags, profiles and security labels used for Observation",
            "content": {}
          },
          "default": {
            "description": "unexpected error",
            "content": {}
          }
        },
        "security": [
          {
            "OAuthV2B2C": [
              "patient/Observation.read"
            ]
          },
          {
            "OAuthV2B2B": [
              "patient/Observation.read"
            ]
          }
        ]
      }
    },
    "/Observation/{id}/$meta": {
      "get": {
        "tags": [
          "Observation"
        ],
        "description": "Retrieves a summary of the profiles, tags, and security labels for given Observation resource.<p><a href = 'https://www.hl7.org/fhir/observation.html'>FHIR documentation for Observation.</a></p>",
        "operationId": "Observation Metadata",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Specify access token for API in the given format: Bearer [access_token].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "default": "application/json+fhir;charset=UTF-8"
            }
          },
          {
            "name": "_format",
            "in": "query",
            "description": "Format of data to be returned.",
            "schema": {
              "type": "string",
              "x-consoleDefault": "application/json"
            },
            "x-consoleDefault": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The logical resource id associated with the Resource.",
            "required": true,
            "schema": {
              "pattern": "[a-z0-9\\-\\.]{1,64}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of all tags, profiles and security labels affixed to the nominated resource.",
            "content": {}
          },
          "default": {
            "description": "unexpected error",
            "content": {}
          }
        },
        "security": [
          {
            "OAuthV2B2C": [
              "patient/Observation.read"
            ]
          },
          {
            "OAuthV2B2B": [
              "patient/Observation.read"
            ]
          }
        ]
      }
    },
    "/Observation/{id}/_history/{vid}/$meta": {
      "get": {
        "tags": [
          "Observation"
        ],
        "description": "Retrieves a summary of the profiles, tags, and security labels for given version of the Observation.<p><a href = 'https://www.hl7.org/fhir/observation.html'>FHIR documentation for Observation.</a></p>",
        "operationId": "Observation Version based Metadata",
        "parameters": [
          {
            "name": "vid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Specify access token for API in the given format: Bearer [access_token].",
            "schema": {
              "type": "string",
              "default": "Bearer [access_token]"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "default": "application/json+fhir;charset=UTF-8"
            }
          },
          {
            "name": "_format",
            "in": "query",
            "description": "Format of data to be returned.",
            "schema": {
              "type": "string",
              "x-consoleDefault": "application/json"
            },
            "x-consoleDefault": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The logical resource id associated with the Resource.",
            "required": true,
            "schema": {
              "pattern": "[a-z0-9\\-\\.]{1,64}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of all tags, profiles and security labels affixed to the nominated version of the resource.",
            "content": {}
          },
          "default": {
            "description": "unexpected error",
            "content": {}
          }
        },
        "security": [
          {
            "OAuthV2B2C": [
              "patient/Observation.read"
            ]
          },
          {
            "OAuthV2B2B": [
              "patient/Observation.read"
            ]
          }
        ]
      }
    },
    "/Observation/{id}/{type}": {
      "get": {
        "tags": [
          "Observation"
        ],
        "description": "Search the specified resource type in Observation compartment.<p><a href = 'https://www.hl7.org/fhir/observation.html'>FHIR documentation for Observation.</a></p>",
        "operationId": " Compartment Search",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Specify access token for API in the given format: Bearer [access_token].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "default": "application/json+fhir;charset=UTF-8"
            }
          },
          {
            "name": "_format",
            "in": "query",
            "description": "Format of data to be returned.",
            "schema": {
              "type": "string",
              "x-consoleDefault": "application/json"
            },
            "x-consoleDefault": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The logical resource id associated with the Resource.",
            "required": true,
            "schema": {
              "pattern": "[a-z0-9\\-\\.]{1,64}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The set of resources associated with a particular Observation",
            "content": {}
          },
          "default": {
            "description": "unexpected error",
            "content": {}
          }
        },
        "security": [
          {
            "OAuthV2B2C": [
              "patient/Observation.read"
            ]
          },
          {
            "OAuthV2B2B": [
              "patient/Observation.read"
            ]
          }
        ]
      }
    },
    "/Observation/_search": {
      "post": {
        "tags": [
          "Observation"
        ],
        "description": "This interaction searches a set of Observations based on some filter criteria. Search interactions take a series of parameters of name'='value pairs encoded as an application/x-www-form-urlencoded submission for a POST.<p><a href = 'https://www.hl7.org/fhir/observation.html'>FHIR documentation for Observation.</a></p>",
        "operationId": "Observations Search using POST",
        "parameters": [
          {
            "name": "_content",
            "in": "query",
            "description": "Search the contents of the resource's data using a fulltext search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_id",
            "in": "query",
            "description": "The resource identity",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_language",
            "in": "query",
            "description": "The resource language",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_lastUpdated",
            "in": "query",
            "description": "Only return resources which were last updated as specified by the given range. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "+_lastUpdated",
            "in": "query",
            "description": "Only return resources which were last updated as specified by the given range. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). Two dates can be used to specify an interval. The prefixes >, >=, <= and < may be used on the parameter value.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "_profile",
            "in": "query",
            "description": "Search for resources which have the given profile",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_security",
            "in": "query",
            "description": "Search for resources which have the given security labels",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_tag",
            "in": "query",
            "description": "Search for resources which have the given tag",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_text",
            "in": "query",
            "description": "Search the contents of the resource's narrative using a fulltext search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "The classification of the type of observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "description": "The code of the observation type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code-value-concept",
            "in": "query",
            "description": "Both code and one of the value parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code-value-date",
            "in": "query",
            "description": "Both code and one of the value parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code-value-quantity",
            "in": "query",
            "description": "Both code and one of the value parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code-value-string",
            "in": "query",
            "description": "Both code and one of the value parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-code",
            "in": "query",
            "description": "The component code of the observation type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-code-component-value-concept",
            "in": "query",
            "description": "Both component code and one of the component value parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-code-component-value-quantity",
            "in": "query",
            "description": "Both component code and one of the component value parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-code-component-value-string",
            "in": "query",
            "description": "Both component code and one of the component value parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-data-absent-reason",
            "in": "query",
            "description": "The reason why the expected value in the element Observation.component.value[x] is missing.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-value-concept",
            "in": "query",
            "description": "The value of the component observation, if the value is a CodeableConcept",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-value-quantity",
            "in": "query",
            "description": "The value of the component observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "component-value-string",
            "in": "query",
            "description": "The value of the component observation, if the value is a string, and also searches in CodeableConcept.text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "data-absent-reason",
            "in": "query",
            "description": "The reason why the expected value in the element Observation.value[x] is missing.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Obtained date/time. If the obtained element is a period, a date that falls in the period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "device",
            "in": "query",
            "description": "The Device that generated the observation data.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "encounter",
            "in": "query",
            "description": "Healthcare event related to the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "description": "The unique id for a particular observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "patient",
            "in": "query",
            "description": "The subject that the observation is about (if patient)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "performer",
            "in": "query",
            "description": "Who performed the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related-target",
            "in": "query",
            "description": "Resource that is related to this one",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related-target-related-type",
            "in": "query",
            "description": "Related Observations - search on related-type and related-target together",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related-type",
            "in": "query",
            "description": "has-member | derived-from | sequel-to | replaces | qualified-by | interfered-by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "specimen",
            "in": "query",
            "description": "Specimen used for this observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subject",
            "in": "query",
            "description": "The subject that the observation is about",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value-concept",
            "in": "query",
            "description": "The value of the observation, if the value is a CodeableConcept",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value-date",
            "in": "query",
            "description": "The value of the observation, if the value is a date or period of time. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "value-quantity",
            "in": "query",
            "description": "The value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "value-string",
            "in": "query",
            "description": "The value of the observation, if the value is a string, and also searches in CodeableConcept.text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Specify access token for API in the given format: Bearer [access_token].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "default": "application/json+fhir;charset=UTF-8"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "_content": {
                    "type": "string",
                    "description": "Search the contents of the resource's data using a fulltext search"
                  },
                  "_id": {
                    "type": "string",
                    "description": "The resource identity"
                  },
                  "_language": {
                    "type": "string",
                    "description": "The resource language"
                  },
                  "_lastUpdated": {
                    "type": "string",
                    "description": "Only return resources which were last updated as specified by the given range. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                    "format": "date"
                  },
                  "_profile": {
                    "type": "string",
                    "description": "Search for resources which have the given profile"
                  },
                  "_security": {
                    "type": "string",
                    "description": "Search for resources which have the given security labels"
                  },
                  "_tag": {
                    "type": "string",
                    "description": "Search for resources which have the given tag"
                  },
                  "_text": {
                    "type": "string",
                    "description": "Search the contents of the resource's narrative using a fulltext search"
                  },
                  "category": {
                    "type": "string",
                    "description": "The classification of the type of observation"
                  },
                  "code": {
                    "type": "string",
                    "description": "The code of the observation type"
                  },
                  "code-value-concept": {
                    "type": "string",
                    "description": "Both code and one of the value parameters"
                  },
                  "code-value-date": {
                    "type": "string",
                    "description": "Both code and one of the value parameters"
                  },
                  "code-value-quantity": {
                    "type": "string",
                    "description": "Both code and one of the value parameters"
                  },
                  "code-value-string": {
                    "type": "string",
                    "description": "Both code and one of the value parameters"
                  },
                  "component-code": {
                    "type": "string",
                    "description": "The component code of the observation type"
                  },
                  "component-code-component-value-concept": {
                    "type": "string",
                    "description": "Both component code and one of the component value parameters"
                  },
                  "component-code-component-value-quantity": {
                    "type": "string",
                    "description": "Both component code and one of the component value parameters"
                  },
                  "component-code-component-value-string": {
                    "type": "string",
                    "description": "Both component code and one of the component value parameters"
                  },
                  "component-data-absent-reason": {
                    "type": "string",
                    "description": "The reason why the expected value in the element Observation.component.value[x] is missing."
                  },
                  "component-value-concept": {
                    "type": "string",
                    "description": "The value of the component observation, if the value is a CodeableConcept"
                  },
                  "component-value-quantity": {
                    "type": "integer",
                    "description": "The value of the component observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)"
                  },
                  "component-value-string": {
                    "type": "string",
                    "description": "The value of the component observation, if the value is a string, and also searches in CodeableConcept.text"
                  },
                  "data-absent-reason": {
                    "type": "string",
                    "description": "The reason why the expected value in the element Observation.value[x] is missing."
                  },
                  "date": {
                    "type": "string",
                    "description": "Obtained date/time. If the obtained element is a period, a date that falls in the period. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                    "format": "date"
                  },
                  "device": {
                    "type": "string",
                    "description": "The Device that generated the observation data."
                  },
                  "encounter": {
                    "type": "string",
                    "description": "Healthcare event related to the observation"
                  },
                  "identifier": {
                    "type": "string",
                    "description": "The unique id for a particular observation"
                  },
                  "patient": {
                    "type": "string",
                    "description": "The subject that the observation is about (if patient)"
                  },
                  "performer": {
                    "type": "string",
                    "description": "Who performed the observation"
                  },
                  "related-target": {
                    "type": "string",
                    "description": "Resource that is related to this one"
                  },
                  "related-target-related-type": {
                    "type": "string",
                    "description": "Related Observations - search on related-type and related-target together"
                  },
                  "related-type": {
                    "type": "string",
                    "description": "has-member | derived-from | sequel-to | replaces | qualified-by | interfered-by"
                  },
                  "specimen": {
                    "type": "string",
                    "description": "Specimen used for this observation"
                  },
                  "status": {
                    "type": "string",
                    "description": "The status of the observation"
                  },
                  "subject": {
                    "type": "string",
                    "description": "The subject that the observation is about"
                  },
                  "value-concept": {
                    "type": "string",
                    "description": "The value of the observation, if the value is a CodeableConcept"
                  },
                  "value-date": {
                    "type": "string",
                    "description": "The value of the observation, if the value is a date or period of time. The date parameter format is yyyy-mm-ddThh:nn:ss(TZ). The prefixes >, >=, <= and < may be used on the parameter value.",
                    "format": "date"
                  },
                  "value-quantity": {
                    "type": "integer",
                    "description": "The value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)"
                  },
                  "value-string": {
                    "type": "string",
                    "description": "The value of the observation, if the value is a string, and also searches in CodeableConcept.text"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Observation bundle",
            "content": {
              "application/json+fhir;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Observation"
                  }
                }
              },
              "application/xml+fhir;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Observation"
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {}
          }
        },
        "security": [
          {
            "OAuthV2B2C": [
              "patient/Observation.read"
            ]
          },
          {
            "OAuthV2B2B": [
              "patient/Observation.read"
            ]
          }
        ]
      }
    },
    "/Observation/{id}/$meta-add": {
      "post": {
        "tags": [
          "Observation"
        ],
        "description": "Add a metadata info Observation with specified id.<p><a href = 'https://www.hl7.org/fhir/observation.html'>FHIR documentation for Observation.</a></p>",
        "operationId": "Add Observation metadata",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Specify access token for API in the given format: Bearer [access_token].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "default": "application/json+fhir;charset=UTF-8"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The logical resource id associated with the Resource.",
            "required": true,
            "schema": {
              "pattern": "[a-z0-9\\-\\.]{1,64}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The request body should be a valid meta payload.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/metaBody"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/metaBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful creation",
            "content": {}
          },
          "400": {
            "description": "Observation could not be parsed or failed basic FHIR validation rules",
            "content": {}
          },
          "404": {
            "description": "Observation not found.",
            "content": {}
          },
          "422": {
            "description": "The Observation resource violated applicable FHIR profiles or server business rules.",
            "content": {}
          },
          "default": {
            "description": "unexpected error",
            "content": {}
          }
        },
        "security": [
          {
            "OAuthV2B2C": [
              "patient/Observation.write"
            ]
          },
          {
            "OAuthV2B2B": [
              "patient/Observation.write"
            ]
          }
        ]
      }
    },
    "/Observation/{id}/_history/{vid}/$meta-add": {
      "post": {
        "tags": [
          "Observation"
        ],
        "description": "Add metadata info to specified Observation resource.<p><a href = 'https://www.hl7.org/fhir/observation.html'>FHIR documentation for Observation.</a></p>",
        "operationId": "Add Observation Version based Metadata",
        "parameters": [
          {
            "name": "vid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Specify access token for API in the given format: Bearer [access_token].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request-header field can be used to specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "default": "application/json+fhir;charset=UTF-8"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The logical resource id associated with the Resource.",
            "required": true,
            "schema": {
              "pattern": "[a-z0-9\\-\\.]{1,64}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The request body should be a valid meta payload.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/metaBody"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/metaBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful creation",
            "content": {}
          },
          "400": {
            "description": "Observation could not be parsed or failed basic FHIR validation rules",
            "content": {}
          },
          "404": {
            "description": "Observation not found.",
            "content": {}
          },
          "422": {
            "description": "The Observation resource violated applicable FHIR profiles or server business rules.",
            "content": {}
          },
          "default": {
            "description": "unexpected error",
            "content": {}
          }
        },
        "security": [
          {
            "OAuthV2B2C": [
              "patient/Observation.write"
            ]
          },
          {
            "OAuthV2B2B": [
              "patient/Observation.write"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Observation": {
        "required": [
          "category",
          "code",
          "effectiveDateTime",
          "encounter",
          "id",
          "resourceType",
          "status",
          "subject",
          "text",
          "valueQuantity"
        ],
        "type": "object",
        "properties": {
          "resourceType": {
            "minLength": 1,
            "type": "string"
          },
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "text": {
            "required": [
              "div",
              "fhir_comments",
              "status"
            ],
            "type": "object",
            "properties": {
              "div": {
                "minLength": 1,
                "type": "string"
              },
              "fhir_comments": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {}
                }
              },
              "status": {
                "minLength": 1,
                "type": "string"
              }
            }
          },
          "status": {
            "minLength": 1,
            "type": "string"
          },
          "category": {
            "required": [
              "coding",
              "fhir_comments"
            ],
            "type": "object",
            "properties": {
              "coding": {
                "minItems": 1,
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "code",
                    "display",
                    "system"
                  ],
                  "type": "object",
                  "properties": {
                    "system": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "display": {
                      "minLength": 1,
                      "type": "string"
                    }
                  }
                }
              },
              "fhir_comments": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "code": {
            "required": [
              "coding",
              "fhir_comments"
            ],
            "type": "object",
            "properties": {
              "coding": {
                "minItems": 1,
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "code",
                    "display",
                    "system"
                  ],
                  "type": "object",
                  "properties": {
                    "system": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "code": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "fhir_comments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "display": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "_display": {
                      "required": [
                        "fhir_comments"
                      ],
                      "type": "object",
                      "properties": {
                        "fhir_comments": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    }
                  }
                }
              },
              "fhir_comments": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "subject": {
            "required": [
              "reference"
            ],
            "type": "object",
            "properties": {
              "reference": {
                "minLength": 1,
                "type": "string"
              }
            }
          },
          "encounter": {
            "required": [
              "reference"
            ],
            "type": "object",
            "properties": {
              "reference": {
                "minLength": 1,
                "type": "string"
              }
            }
          },
          "effectiveDateTime": {
            "minLength": 1,
            "type": "string"
          },
          "valueQuantity": {
            "required": [
              "code",
              "fhir_comments",
              "system",
              "unit",
              "value"
            ],
            "type": "object",
            "properties": {
              "unit": {
                "minLength": 1,
                "type": "string"
              },
              "system": {
                "minLength": 1,
                "type": "string"
              },
              "code": {
                "minLength": 1,
                "type": "string"
              },
              "fhir_comments": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {}
                }
              },
              "value": {
                "type": "number"
              }
            }
          }
        },
        "description": ""
      },
      "metaBody": {
        "type": "string"
      }
    },
    "securitySchemes": {
      "OAuthV2B2C": {
        "type": "oauth2",
        "description": "Security scheme for B2C flow using authorization code flow.",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://healthapix-demo-test.apigee.net/oauth/v2/authorize",
            "tokenUrl": "https://healthapix-demo-test.apigee.net/oauth/v2/accesstoken",
            "scopes": {
              "patient/Observation.read": "Read permissions for Observation demographics.",
              "patient/Observation.write": "Write permissions for Observation demographics."
            }
          }
        }
      },
      "OAuthV2B2B": {
        "type": "oauth2",
        "description": "Security scheme for B2B flow using authorization code flow.",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://healthapix-demo-test.apigee.net/oauth/v2/accesstoken?grant_type=client_credentials",
            "scopes": {
              "patient/Observation.read": "Read permissions for Observation demographics.",
              "patient/Observation.write": "Write permissions for Observation demographics."
            }
          }
        }
      }
    }
  }
}
