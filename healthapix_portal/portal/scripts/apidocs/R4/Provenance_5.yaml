openapi: 3.0.1
info:
  title: HL7® FHIR® Provenance resource API documentation
  description: "Fast Healthcare Interoperability Resources (HL7® FHIR®, pronounced \"Fire\"\
  ) defines a set of \"Resources\" that represent granular clinical concepts. The resources\
  \ can be managed in isolation, or aggregated into complex documents. Technically, FHIR is\
  \ designed for the web; the resources are based on simple JSON structures, with an\
  \ http-based RESTful protocol where each resource has predictable URL. Where possible,\
  \ open internet standards are used for data representation. The FHIR® R4 API docs are part\
  \ of the FHIR® Specifications (v4.0.1: R4). The is the current published version. This\
  \ section contains API docs for the R4 resources required to meet the CMS and ONC\
  \ interoperability and data access requirements. API docs for other resources can be added\
  \ by API publishers on request. \n"
servers:
- url: https://org-env.apigee.net/v1/ghc/r4
tags:
- name: Provenance
paths:
  /Provenance:
    get:
      tags:
      - Provenance
      parameters:
      - name: Authorization
        in: header
        description: 'Specify access token for API in the given format: Bearer [access_token].'
        schema:
          type: string
      - name: Accept
        in: header
        description: The Accept request-header field can be used to specify certain media types which are acceptable for the response.
        schema:
          type: string
          default: application/fhir+json;charset=utf-8
      - name: _language
        in: query
        description: The language of the resource
        schema:
          type: string
      - name: agent-type
        in: query
        description: How the agent participated
        schema:
          type: string
      - name: agent
        in: query
        description: Who participated
        schema:
          type: string
      - name: signature-type
        in: query
        description: Indication of the reason the entity signed the object(s)
        schema:
          type: string
      - name: patient
        in: query
        description: Target Reference(s) (usually version specific)
        schema:
          type: string
      - name: location
        in: query
        description: Where the activity occurred, if relevant
        schema:
          type: string
      - name: _id
        in: query
        description: The ID of the resource
        schema:
          type: string
      - name: agent-role
        in: query
        description: What the agents role was
        schema:
          type: string
      - name: recorded
        in: query
        description: When the activity was recorded / updated
        schema:
          type: string
          format: date
      - name: when
        in: query
        description: When the activity occurred
        schema:
          type: string
          format: date
      - name: entity
        in: query
        description: Identity of entity
        schema:
          type: string
      - name: target
        in: query
        description: Target Reference(s) (usually version specific)
        schema:
          type: string
      - name: _format
        in: query
        schema:
          type: string
          x-consoleDefault: application/fhir+json;charset=utf-8
        x-consoleDefault: application/fhir+json;charset=utf-8
      responses:
        200:
          description: Success
          content:
            'application/fhir+json;charset=utf-8':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provenance'
      security:
        - OAuthV2B2B:
            - patient/Provenance.read
            - patient/Provenance.write
    post:
      tags:
      - Provenance
      parameters:
      - name: Authorization
        in: header
        description: 'Specify access token for API in the given format: Bearer [access_token].'
        schema:
          type: string
      - name: Accept
        in: header
        description: The Accept request-header field can be used to specify certain media types which are acceptable for the response.
        schema:
          type: string
          default: application/fhir+json;charset=utf-8
      requestBody:
        content:
          'application/fhir+json;charset=utf-8':
            schema:
              $ref: '#/components/schemas/Provenance'
        required: false
      responses:
        200:
          description: Success
          content: {}
      x-codegen-request-body-name: body
      security:
        - OAuthV2B2B:
            - patient/Provenance.read
            - patient/Provenance.write
  /Provenance/{id}:
    get:
      tags:
      - Provenance
      parameters:
      - name: Authorization
        in: header
        description: 'Specify access token for API in the given format: Bearer [access_token].'
        schema:
          type: string
      - name: Accept
        in: header
        description: The Accept request-header field can be used to specify certain media types which are acceptable for the response.
        schema:
          type: string
          default: application/fhir+json;charset=utf-8
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            'application/fhir+json;charset=utf-8':
              schema:
                $ref: '#/components/schemas/Provenance'
      security:
        - OAuthV2B2B:
            - patient/Provenance.read
            - patient/Provenance.write
    put:
      tags:
      - Provenance
      parameters:
      - name: Authorization
        in: header
        description: 'Specify access token for API in the given format: Bearer [access_token].'
        schema:
          type: string
      - name: Accept
        in: header
        description: The Accept request-header field can be used to specify certain media types which are acceptable for the response.
        schema:
          type: string
          default: application/fhir+json;charset=utf-8
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          'application/fhir+json;charset=utf-8':
            schema:
              $ref: '#/components/schemas/Provenance'
        required: false
      responses:
        200:
          description: Success
          content: {}
      x-codegen-request-body-name: body
      security:
        - OAuthV2B2B:
            - patient/Provenance.read
            - patient/Provenance.write
    delete:
      tags:
      - Provenance
      parameters:
      - name: Authorization
        in: header
        description: 'Specify access token for API in the given format: Bearer [access_token].'
        schema:
          type: string
      - name: Accept
        in: header
        description: The Accept request-header field can be used to specify certain media types which are acceptable for the response.
        schema:
          type: string
          default: application/fhir+json;charset=utf-8
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success
          content: {}
      security:
        - OAuthV2B2B:
            - patient/Provenance.read
            - patient/Provenance.write
  /Provenance/{id}/_history:
    get:
      tags:
      - Provenance
      parameters:
      - name: Authorization
        in: header
        description: 'Specify access token for API in the given format: Bearer [access_token].'
        schema:
          type: string
      - name: Accept
        in: header
        description: The Accept request-header field can be used to specify certain media types which are acceptable for the response.
        schema:
          type: string
          default: application/fhir+json;charset=utf-8
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: _count
        in: query
        schema:
          type: string
      - name: _since
        in: query
        schema:
          type: string
      responses:
        200:
          description: Success
          content: {}
      security:
        - OAuthV2B2B:
            - patient/Provenance.read
            - patient/Provenance.write
  /Provenance/_history:
    get:
      tags:
      - Provenance
      parameters:
      - name: Authorization
        in: header
        description: 'Specify access token for API in the given format: Bearer [access_token].'
        schema:
          type: string
      - name: Accept
        in: header
        description: The Accept request-header field can be used to specify certain media types which are acceptable for the response.
        schema:
          type: string
          default: application/fhir+json;charset=utf-8
      - name: _count
        in: query
        schema:
          type: string
      - name: _since
        in: query
        schema:
          type: string
      responses:
        200:
          description: Success
          content: {}
      security:
        - OAuthV2B2B:
            - patient/Provenance.read
            - patient/Provenance.write
  /Provenance/{id}/_history/{vid}:
    get:
      tags:
      - Provenance
      parameters:
      - name: Authorization
        in: header
        description: 'Specify access token for API in the given format: Bearer [access_token].'
        schema:
          type: string
      - name: Accept
        in: header
        description: The Accept request-header field can be used to specify certain media types which are acceptable for the response.
        schema:
          type: string
          default: application/fhir+json;charset=utf-8
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: vid
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            'application/fhir+json;charset=utf-8':
              schema:
                $ref: '#/components/schemas/Provenance'
      security:
        - OAuthV2B2B:
            - patient/Provenance.read
            - patient/Provenance.write
components:
  schemas:
    Provenance:
      required:
      - agent
      - entity
      - id
      - location
      - meta
      - occurredPeriod
      - policy
      - reason
      - recorded
      - resourceType
      - target
      - text
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          required:
          - div
          - status
          type: object
          properties:
            status:
              minLength: 1
              type: string
            div:
              minLength: 1
              type: string
        target:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            required:
            - reference
            type: object
            properties:
              reference:
                minLength: 1
                type: string
        occurredPeriod:
          required:
          - end
          - start
          type: object
          properties:
            start:
              minLength: 1
              type: string
            end:
              minLength: 1
              type: string
        recorded:
          minLength: 1
          type: string
        policy:
          type: array
          items:
            type: object
            properties: {}
        location:
          required:
          - reference
          type: object
          properties:
            reference:
              minLength: 1
              type: string
        reason:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            type: object
            properties:
              coding:
                minItems: 1
                uniqueItems: true
                type: array
                items:
                  required:
                  - code
                  - display
                  - system
                  type: object
                  properties:
                    system:
                      minLength: 1
                      type: string
                    code:
                      minLength: 1
                      type: string
                    display:
                      minLength: 1
                      type: string
        agent:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            required:
            - id
            type: object
            properties:
              id:
                minLength: 1
                type: string
              type:
                required:
                - coding
                type: object
                properties:
                  coding:
                    minItems: 1
                    uniqueItems: true
                    type: array
                    items:
                      required:
                      - code
                      - system
                      type: object
                      properties:
                        system:
                          minLength: 1
                          type: string
                        code:
                          minLength: 1
                          type: string
              who:
                required:
                - reference
                type: object
                properties:
                  reference:
                    minLength: 1
                    type: string
        entity:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            required:
            - role
            type: object
            properties:
              role:
                minLength: 1
                type: string
              what:
                required:
                - display
                - reference
                type: object
                properties:
                  reference:
                    minLength: 1
                    type: string
                  display:
                    minLength: 1
                    type: string
        meta:
          required:
          - tag
          type: object
          properties:
            tag:
              minItems: 1
              uniqueItems: true
              type: array
              items:
                required:
                - code
                - display
                - system
                type: object
                properties:
                  system:
                    minLength: 1
                    type: string
                  code:
                    minLength: 1
                    type: string
                  display:
                    minLength: 1
                    type: string
      description: ""
  securitySchemes:
    OAuthV2B2C:
      type: oauth2
      description: Security scheme for B2C flow using authorization code flow.
      flows:
        authorizationCode:
          authorizationUrl: 'https://org-env.apigee.net/oauth/v2/authorize'
          tokenUrl: 'https://org-env.apigee.net/oauth/v2/accesstoken'
          scopes:
            patient/Provenance.read: Read permissions for Provenance demographics.
            patient/Provenance.write: Write permissions for Provenance demographics.
    OAuthV2B2B:
      type: oauth2
      description: Security scheme for B2B flow using authorization code flow.
      flows:
        clientCredentials:
          tokenUrl: 'https://org-env.apigee.net/oauth/v2/accesstoken?grant_type=client_credentials'
          scopes:
            patient/Provenance.read: Read permissions for Provenance demographics.
            patient/Provenance.write: Write permissions for Provenance demographics.
